oqqqqinclude <stdio.h>
#include <stdio.h>
u can assume fct will be always a pointer to a function
    Returns the result of the function,
    Otherwise, returns None if something happens during the function and prints in stderr the error precede by Exception:
    You have to use try: / except:

guillaume@ubuntu:~/0x05$ cat 101-main.py
#!/usr/bin/python3
safe_function = __import__('101-safe_function').safe_function


def my_div(a, b):
    return a / b

result = safe_function(my_div, 10, 2)
print("result of my_div: {}".format(result))

result = safe_function(my_div, 10, 0)
print("result of my_div: {}".format(result))


def print_list(my_list, len):
    i = 0
    while i < len:
        print(my_list[i])
        i += 1
    return len

result = safe_function(print_list, [1, 2, 3, 4], 10)
print("result of print_list: {}".format(result))

guillaume@ubuntu:~/0x05$ ./101-main.py
result of my_div: 5.0
Exception: division by zero
result of my_div: None
1
2
3
4
Exception: list index out of range
result of print_list: None
guillaume@ubuntu:~/0x05$ ./101-main.py 2> /dev/null
result of my_div: 5.0
result of my_div: None
1
2
3
4
result of print_list: None
guillaume@ubuntu:~/0x05$ 

#include <Python.h>
:/**
 * print_python_list_info - shows info about Python lists
 * @p: object
 *
 * Return: 0
 */
void print_python_list_info(PyObject *p)
{
	long int list_size, a, i;

	i = 0;
	PyObject *obj;

	list_size = PyList_Size(p);
	a = ((PyListObject *)p)->allocated;

	printf("[*] Size of the Python List = %ld\n", list_size);
	printf("[*] Allocated = %ld\n", a);
	while (i < list_size)
	{
		obj = PyList_GetItem(p, i);
		printf("Element %ld: %s\n", i, Py_TYPE(obj)->tp_name);
		i++;
	}
}
#include <Python.h>
/**
 * print_python_list_info - shows info about Python lists
 * @p: object
 *
 * Return: 0
 */
void print_python_list_info(PyObject *p)
{
	long int list_size, a, i;

	i = 0;
	PyObject *obj;

	list_size = PyList_Size(p);
	a = ((PyListObject *)p)->allocated;

	printf("[*] Size of the Python List = %ld\n", list_size);
	printf("[*] Allocated = %ld\n", a);
	while (i < list_size)
	{
		obj = PyList_GetItem(p, i);
		printf("Element %ld: %s\n", i, Py_TYPE(obj)->tp_name);
		i++;
	}
}

